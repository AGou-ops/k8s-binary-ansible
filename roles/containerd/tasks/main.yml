---
- name: Install runc
  copy:
    src: "{{ download.dest }}/runc/{{ runc.version }}/runc.amd64"
    dest: "/usr/local/sbin/runc"
    owner: root
    group: root
    mode: 0755
  tags: install_runc

- name: Create cni directory
  file:
    path: "/opt/cni/bin"
    owner: root
    group: root
    mode: 0755
    state: directory
  tags: cni_config

- name: Install cni
  unarchive:
    src: "{{ download.dest }}/cniplugins/{{ cniplugins.version }}/cni-plugins-linux-amd64-{{ cniplugins.version }}.tgz"
    dest: "/opt/cni/bin/"
    remote_src: no
  tags: install_cni

- name: Fix cilium mount-cgroup fails to copy file
  file:
    path: "/opt/cni/bin"
    owner: root
    group: root
    mode: '0755'
  tags: cni_config

# 使用下面的full包进行代替
# - name: Install containerd
#   unarchive:
#     src: "{{ download.dest }}/containerd/v{{ containerd.version }}/containerd-{{ containerd.version }}-linux-amd64.tar.gz"
#     dest: "/usr/local/bin/"
#     remote_src: no
#     extra_opts:
#       - --strip-components=1
#   tags: install_containerd
#   notify:
#     - restart containerd

- name: Install nerdctl & containerd
  unarchive:
    src: "{{ download.dest }}/nerdctl/{{ nerdctl.version }}/nerdctl-full-{{ nerdctl.version.replace('v', '') }}-linux-amd64.tar.gz"
    dest: "/usr/local/"
    remote_src: no
  tags: install_nerdctl_containerd
  notify:
    - restart containerd

- name: "Set containerd service"
  template:
    src: "containerd.service.j2"
    dest: "/usr/lib/systemd/system/containerd.service"
    owner: root
    group: root
    mode: 0644
  tags: containerd_config

- name: "Create containerd data directory"
  file:
    path: "{{ containerd.root }}"
    owner: root
    group: root
    mode: 0755
    state: directory
  tags: containerd_config

- name: "Create containerd config directory"
  file:
    path: "/etc/containerd"
    owner: root
    group: root
    mode: 0755
    state: directory
  tags: containerd_config

- name: "Create containerd cert.d directory"
  file:
    path: "/etc/containerd/certs.d/{{ registry_server }}"
    state: directory
    mode: '0755'
    force: yes

- name: "Copy root-ca.crt to /etc/containerd/"
  ansible.builtin.copy:
    src: root-ca.crt
    dest: /etc/containerd/
    owner: root
    group: root
    mode: '0644'

- name: "Template hosts.toml.j2"
  ansible.builtin.template:
    src: hosts.toml.j2
    dest: "/etc/containerd/certs.d/{{ registry_server }}/hosts.toml"
    owner: root
    group: root
    mode: '0644'

- name: "Template containerd config"
  template:
    src: "config.toml.j2"
    dest: "/etc/containerd/config.toml"
    owner: root
    group: root
    mode: 0644
  tags: containerd_config
  notify:
    - restart containerd

- name: Install cri-tools
  unarchive:
    src: "{{ download.dest }}/critools/{{ critools.version }}/crictl-{{ critools.version }}-linux-amd64.tar.gz"
    dest: "/usr/local/bin/"
    remote_src: no
  tags: install_critools
  notify:
    - Get crictl completion
    - Install crictl completion

- name: "Config cri-tools"
  template:
    src: "crictl.yaml.j2"
    dest: "/etc/crictl.yaml"
    owner: root
    group: root
    mode: 0644
  tags: cri_tools
